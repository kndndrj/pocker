---
version: '3.3'

services:

  traefik:
    image: "traefik:v2.8"
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      #- "--accesslog=true"
      #- "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      # http/https
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--entrypoints.websecure.address=:443"
      # imap
      - "--entrypoints.imap.address=:993"
      # smtpsecure
      - "--entrypoints.smtpsecure.address=:465"
      # smtp
      - "--entrypoints.smtp.address=:25"
      # letsencrypt
      #- "--certificatesresolvers.certresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory" # -- for testing letsencrypt
      - "--certificatesresolvers.certresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.certresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.certresolver.acme.email=postmaster@example.com"
      - "--certificatesresolvers.certresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
      - "465:465"
      - "25:25"
      - "993:993"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./data/letsencrypt:/letsencrypt"

  mailserver:
    image: ghcr.io/kndndrj/pocker:latest-dashboard # -- with dashboard
    #image: ghcr.io/kndndrj/pocker:latest # -- without dashboard
    container_name: mailserver
    volumes:
      # Letsencrypt certs (if using traefik, use something like traefik-certs-dumper)
      - "/etc/letsencrypt/live:/etc/letsencrypt/live:ro"
      # Mail direcotry
      - "./data/mailserver/mail:/var/mail"
      # User data
      - "./data/mailserver/users:/etc/userfiles"
      # opendkim keys
      - "./data/mailserver/keys:/etc/opendkim/keys"
    environment:
      - POCKER_SUBDOMAIN=mail
      - POCKER_DOMAIN=example.com
      - POCKER_PAGE_TITLE=Pocker Mail Dashboard
      - POCKER_LOGO_URL=https://blabla.com/image.png
      - POCKER_TRUSTED_PROXIES=traefik # -- If using Traefik (same as traefik container_name)
    # If NOT using Traefik:
    ports:
      - "993:993"
      - "465:465"
      - "25:25"
    # If using Traefik:
    # Note that traefik doesn't support IMAP or SMTP, so we use a passthrough connection,
    # which means the services are basically exposed directly to the internet.
    # Another thing - we must use is proxy-protocol, which forwards the client's ip to the services.
    labels:
      - "traefik.enable=true"
      # imap
      - "traefik.tcp.routers.imap.entrypoints=imap"
      - "traefik.tcp.routers.imap.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.imap.service=imap"
      - "traefik.tcp.services.imap.loadbalancer.server.port=10993"
      - "traefik.tcp.services.imap.loadbalancer.proxyprotocol.version=2"
      # smtpsecure
      - "traefik.tcp.routers.smtpsecure.entrypoints=smtpsecure"
      - "traefik.tcp.routers.smtpsecure.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.smtpsecure.service=smtpsecure"
      - "traefik.tcp.services.smtpsecure.loadbalancer.server.port=10465"
      - "traefik.tcp.services.smtpsecure.loadbalancer.proxyprotocol.version=2"
      # smtp
      - "traefik.tcp.routers.smtp.entrypoints=smtp"
      - "traefik.tcp.routers.smtp.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.smtp.service=smtp"
      - "traefik.tcp.services.smtp.loadbalancer.server.port=10025"
      - "traefik.tcp.services.smtp.loadbalancer.proxyprotocol.version=2"
      # dashboard (optional)
      - "traefik.http.routers.dashboard.rule=Host(`mail.example.com`) && PathPrefix(`/dashboard`)"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls.certresolver=certresolver"
      - "traefik.http.routers.dashboard.service=dashboard"
      - "traefik.http.services.dashboard.loadbalancer.server.port=8080"

  roundcubemail:
    image: roundcube/roundcubemail:latest
    container_name: roundcubemail
    restart: unless-stopped
    depends_on:
      - roundcubedb
    links:
      - roundcubedb
    environment:
      - ROUNDCUBEMAIL_DB_TYPE=pgsql
      - ROUNDCUBEMAIL_DB_HOST=roundcubedb
      - ROUNDCUBEMAIL_DB_NAME=roundcube
      - ROUNDCUBEMAIL_DB_USER=roundcube
      - ROUNDCUBEMAIL_DB_PASSWORD=roundcube
      - ROUNDCUBEMAIL_SKIN=elastic
      - ROUNDCUBEMAIL_DEFAULT_HOST=ssl://mail.example.com
      - ROUNDCUBEMAIL_DEFAULT_PORT=993
      - ROUNDCUBEMAIL_SMTP_SERVER=ssl://mail.example.com
      - ROUNDCUBEMAIL_SMTP_PORT=465
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.roundcube.rule=Host(`mail.example.com`)"
      - "traefik.http.routers.roundcube.entrypoints=websecure"
      - "traefik.http.routers.roundcube.tls.certresolver=certresolver"
      - "traefik.http.routers.roundcube.service=roundcube"
      - "traefik.http.services.roundcube.loadbalancer.server.port=80"

  roundcubedb:
    image: postgres:latest
    container_name: roundcubedb
    restart: unless-stopped
    volumes:
      - "./data/db:/var/lib/postgresql/data"
    environment:
      - POSTGRES_DB=roundcube
      - POSTGRES_USER=roundcube
      - POSTGRES_PASSWORD=roundcube
