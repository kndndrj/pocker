#!/bin/bash

USAGE="Usage: $0 <user>";

if [ -z "$1" ]; then
    echo $USAGE;
    exit 1
fi

###################################
## VARIABLES                     ##
###################################
USERNAME=$1;
LARGEST_ID="$(cat /etc/passwd | sed "/nobody/ s/.*//g" | cut -d ":" -f 3 | sort -n | tail -n 1)"
USER_ID="$(expr $LARGEST_ID + 1)"

echo "info: creating user: $USERNAME"

# Ask for password here, so we can exit before doing anything
printf "password for user $USERNAME: "
read -s PASSWORD
echo
if [ -z "$PASSWORD" ]; then
    echo "error: Empty password not allowed. Please try again."
    exit 1
fi

printf "confirm password: "
read -s CONFIRM
echo
if [ "$CONFIRM" != "$PASSWORD" ]; then
    echo "error: Passwords don't match. Please try again."
    exit 1
fi

###################################
## USER RECORDS                  ##
###################################
# /etc/passwd
if ! (grep -q "^$USERNAME:" /etc/passwd); then
    echo "$USERNAME:x:$USER_ID:$USER_ID::/nonexistent:/bin/sh" >> /etc/passwd
fi

# /etc/group - create
if ! (grep -q "^$USERNAME:" /etc/group); then
    echo "$USERNAME:x:$USER_ID:" >> /etc/group
fi

# /etc/group - add to mail group
if ! (grep -q "^mail:x:.*$USERNAME" /etc/group); then
    TEMP="$(mktemp)"

    # add a comma if someone is already in the group
    INSERT_STRING="$USERNAME"
    if [ -n "$(grep "^mail:x:" /etc/group | cut -d ":" -f 4)" ]; then
        INSERT_STRING=",$USERNAME"
    fi

    sed "/mail:x:/ s/$/$INSERT_STRING/g" /etc/group > $TEMP
    cat "$TEMP" > /etc/group
fi

# /etc/shadow
if ! (grep -q "^$USERNAME:" /etc/shadow); then
    # Generate salt
    SALT="$(openssl rand -hex 4)"
    # Generate the actual password
    HASH="$(openssl passwd -6 -salt $SALT $PASSWORD)"
    # Get number of days since epoch
    DAYS_SINCE_EPOCH="$(( $(date +%s) / 86400 ))"

    echo "$USERNAME:$HASH:$DAYS_SINCE_EPOCH::::::" >> /etc/shadow
fi

# /etc/gshadow
if ! (grep -q "^$USERNAME:" /etc/gshadow); then
    echo "$USERNAME:!::" >> /etc/gshadow
fi
