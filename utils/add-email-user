#!/bin/sh

USAGE="Usage: $0 <user> [password]
       If the password is not defined, you will be prompted for one."

if [ -z "$1" ]; then
    echo "$USAGE"
    exit 1
fi

###################################
## VARIABLES                     ##
###################################
USERNAME="$1"
PASSWORD="$2"
LARGEST_ID="$(cat /etc/passwd | awk -F ":" '$3 >= $4 && $3 < 60000 { print $3 ;} $3 < $4 && $4 < 60000 { print $4 ;}' | sort -n | tail -n 1)"
[ $LARGEST_ID -lt 1000 ] && LARGEST_ID=1000
USER_ID="$(expr $LARGEST_ID + 1)"
USER_HOME="/home/$USERNAME"

echo "info: creating user: $USERNAME"

# Ask for password here (if not already provided), so we can exit before doing anything
if [ -z "$PASSWORD" ]; then
    printf "password for user $USERNAME: "
    stty -echo
    read PASSWORD
    stty echo
    echo
    if [ -z "$PASSWORD" ]; then
        echo "error: Empty password not allowed. Please try again."
        exit 1
    fi

    printf "confirm password: "
    stty -echo
    read CONFIRM
    stty echo
    echo
    if [ "$CONFIRM" != "$PASSWORD" ]; then
        echo "error: Passwords don't match. Please try again."
        exit 1
    fi
fi

###################################
## USER RECORDS                  ##
###################################
# /etc/passwd
if ! (grep -q "^$USERNAME:" /etc/passwd); then
    echo "$USERNAME:x:$USER_ID:$USER_ID::$USER_HOME:/bin/sh" >> /etc/passwd
fi

# /etc/group - create
if ! (grep -q "^$USERNAME:" /etc/group); then
    echo "$USERNAME:x:$USER_ID:" >> /etc/group
fi

# /etc/group - add to mail group
if ! (grep -q "^mail:x:.*$USERNAME" /etc/group); then
    TEMP="$(mktemp)"

    # add a comma if someone is already in the group
    INSERT_STRING="$USERNAME"
    if [ -n "$(grep "^mail:x:" /etc/group | cut -d ":" -f 4)" ]; then
        INSERT_STRING=",$USERNAME"
    fi

    sed "/mail:x:/ s/$/$INSERT_STRING/g" /etc/group > $TEMP
    cat "$TEMP" > /etc/group
fi

# /etc/shadow
if ! (grep -q "^$USERNAME:" /etc/shadow); then
    # Generate salt
    SALT="$(openssl rand -hex 4)"
    # Generate the actual password
    HASH="$(openssl passwd -6 -salt $SALT $PASSWORD)"
    # Get number of days since epoch
    DAYS_SINCE_EPOCH="$(( $(date +%s) / 86400 ))"

    echo "$USERNAME:$HASH:$DAYS_SINCE_EPOCH::::::" >> /etc/shadow
fi

# /etc/gshadow
if ! (grep -q "^$USERNAME:" /etc/gshadow); then
    echo "$USERNAME:!::" >> /etc/gshadow
fi

###################################
## HOME DIRECTORY                ##
###################################
mkdir -p "$USER_HOME"
chown -R "$USERNAME:$USERNAME" "$USER_HOME"
